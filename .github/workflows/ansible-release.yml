name: ansible-release
on:
  workflow_dispatch:
    inputs:
      ansible_version:
        description: 'Release Version. Example : 11.1.0'
        required: true
      ansible_major_version:
        description: 'Exmaple 11'
        required: true

jobs:
  build:
    name: 'Build Ansible community distribution (${{ inputs.ansible_version }})'
    runs-on: ubuntu-latest


    steps:
      - name: Check out antsibull
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull
          ref: main
          path: antsibull

      - name: Check out antsibull-core
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull-core
          ref: main
          path: antsibull-core

      - name: Check out antsibull-changelog
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull-changelog
          ref: main
          path: antsibull-changelog

      - name: Pre-create build directory
        run: mkdir -p antsibull/build

# We need to checkout the docs repo here

      # This is where the antsibull build-release role expects it by default
      - name: Check out ansible-build-data under antsibull build directory
        uses: actions/checkout@v3
        with:
          path: antsibull/build/ansible-build-data
          ref: test

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: antsibull
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install ansible-core . ../antsibull-core ../antsibull-changelog
          ansible-galaxy collection install 'git+https://github.com/ansible-collections/community.general.git'

      - name: Checking out to a new branch & setting the user details
        run: |
          cd antsibull/build/ansible-build-data
          git checkout -b "publish-${{ inputs.ansible_major_version }}"
          git config --global user.name "${{github.actor}}"
          git config --global user.email "username@users.noreply.github.com"

# Run the playbook according to the current release process

      - name: Test building a release with the defaults
        working-directory: antsibull
        run: |
          ansible-playbook -vv playbooks/build-single-release.yaml \
          -e antsibull_data_reset=false \
          -e 'antsibull_ansible_version="${{ inputs.ansible_version }}"' \
          -e 'antsibull_data_dir="{{ antsibull_data_git_dir }}/${{ inputs.ansible_major_version }}"' \
          -e 'antsibull_build_file="ansible-${{ inputs.ansible_major_version }}.build"'

        env:
          # Make result better readable
          ANSIBLE_CALLBACK_RESULT_FORMAT: yaml

      - name: Commit ansible-build-data and push the changes to github
        env:
          CI_COMMIT_MESSAGE: 'Ansible "${{ inputs.ansible_major_version }}": Dependencies, changelog and porting guide'
        run: |
         pwd
         git config --global user.name "${{github.actor}}"
         git config --global user.email "username@users.noreply.github.com"
         git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
         git push

# Run the docs build
# upload to PyPI
# Create the tag




