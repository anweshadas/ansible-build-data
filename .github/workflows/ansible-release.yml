name: ansible-release
on:
  workflow_dispatch:
    inputs:
      ansible-version:
        description: >-
          Release Version. Example : 11.1.0
        required: true
      ansible-major-version:
        description: Example 11
        required: true
env:
  CI_COMMIT_MESSAGE: 'Ansible "${{ inputs.ansible-version }}": Dependencies, changelog and porting guide'


jobs:
  build:
    name: 'Build Ansible (${{ inputs.ansible-version }})'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write


    steps:
      - name: Check out antsibull
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull
          ref: main
          path: antsibull

      - name: Pre-create build directory
        run: mkdir -p antsibull/build

# We need to checkout the docs repo here

      # This is where the antsibull build-release role expects it by default
      - name: Check out ansible-build-data under antsibull build directory
        uses: actions/checkout@v3
        with:
          path: antsibull/build/ansible-build-data

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: antsibull
        run: |
          python3 -m pip install ansible-core antsibull
          ansible-galaxy collection install community.general

      - name: Checking out to a new branch & setting the user details
        working-directory: antsibull/build/ansible-build-data
        run: |
          git checkout -b "publish-${{ inputs.ansible-version }}"
          git config --global user.name "Github Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

# Run the playbook according to the current release process

      - name: Test building a release with the defaults
        working-directory: antsibull
        run: |
          ansible-playbook -vv playbooks/build-single-release.yaml \
          -e antsibull_data_reset=false \
          -e 'antsibull_ansible_version="${{ inputs.ansible-version }}"' \
          -e 'antsibull_data_dir="{{ antsibull_data_git_dir }}/${{ inputs.ansible-major-version }}"'

        env:
          # Make result better readable
          ANSIBLE_CALLBACK_RESULT_FORMAT: yaml

      - name: Commit ansible-build-data and push the changes to github
        working-directory: 'antsibull/build/ansible-build-data/${{ inputs.ansible-major-version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         git add *.rst *.build *.deps *.yaml *.in validate-tags-ignores
         git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
         git push origin "publish-${{ inputs.ansible-version }}"

      - name: Create PR to the ansible-build-data
        working-directory: antsibull/build/ansible-build-data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create -B main -H "publish-${{ inputs.ansible-version }}" --title "${{ env.CI_COMMIT_MESSAGE }}"  --body "${{ env.CI_COMMIT_MESSAGE }}"
